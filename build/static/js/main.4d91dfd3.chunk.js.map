{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","placeholder","searchChange","type","onChange","App","event","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAaeA,G,YAVF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACX,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YACtE,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,aCHXC,G,MAAW,SAACC,GACrB,OACI,qBAAKP,UAAU,YAAf,SACKO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCEpBQ,G,MARG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKZ,UAAU,SAAf,SACI,uBAAOa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QC8BtDG,E,kDA9Bb,aAAc,IAAD,8BACX,gBAWFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,QAAQ,WAAKC,QAAQC,IAAI,EAAKC,WAXvE,EAAKA,MAAQ,CACXf,SAAU,GACVU,YAAa,IAJJ,E,gEAQO,IAAD,OACjBM,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACT,SAAUoB,S,+BAOlH,IAAD,EAC4BC,KAAKN,MAA/Bf,EADF,EACEA,SAAUU,EADZ,EACYA,YACZY,EAAmBtB,EAASuB,QAAO,SAAAhC,GACvC,OAAOA,EAAQK,KAAK4B,cAAcC,SAASf,EAAYc,kBAEzD,OACE,sBAAKhC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAciB,KAAKjB,eAC5D,cAAC,EAAD,CAAUJ,SAAUsB,W,GA1BRI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d91dfd3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nconst Card = ({monster}) => {\r\n    return (\r\n        <div className='card-container'>\r\n        <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n            <h2>{monster.name}</h2>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nconst SearchBox = ({placeholder, searchChange}) => {\r\n    return (\r\n        <div className='search'>\r\n            <input type=\"search\" placeholder={placeholder} onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\nimport './App.css'\nimport {CardList} from './components/card-list/card-list.component.jsx'\nimport SearchBox from './components/search-box/search-box.component'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json()).then(users=>this.setState({monsters: users}));\n  }\n\n  searchChange=(event)=>{\n    this.setState({searchField: event.target.value}, ()=>{console.log(this.state)})\n  }\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster=>{\n      return monster.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder=\"Search Monsters\" searchChange={this.searchChange} />\n      <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}